lengthofsequence3:--
'''ip="xyzabcdefklmnopqefgh"
op=7'''

s="abcde"
max_length=0
length=1
for i in range(1,len(s)):
    if ord(s[i])==ord(s[i-1])+1:
        length=length+1
    else:
        if length>max_length:
            max_length=length
        length=1
if length>max_length:
    max_length=length
print(max_length)
----------------------------------------------------------------------
matrixstring:--
n=int(input())
m=[]
for i in range(n):
    m.append(input())
s=input()
for i in range(len(s)):
    if s[i] not in m[i%n]:
        print("no")
        break
else:
    print("yes")
---------------------------------------------------------------------------
matrixstringduplicates3:--
n=int(input())
m=[]
for i in range(n):
    m.append(list(input()))
s=input()
f=0
for i in range(len(s)):
    if s[i] not in m[i%n]:
        print("no")
        f=1
        break
    else:
        m[i].remove(s[i])
if(f==0):
    print("yes")
-------------------------------------------------------------------------------
palindromerecursion:--
\
def is_palindrome(n):
    num=str(n)
    if len(num)<=1:
        return True
    if num[0]==num[-1]:
        return is_palindrome(num[1:-1])
    else:
        return False

n=int(input())
if is_palindrome(n):
    print("pal")
else:
    print("not")
------------------------------------------------------------------------------
pattern12:--
a=4
k=1
for i in range(4):
    for j in range(4):
        if(i==0 or j==0 or i==a-1 or j==a-1):
            print("* ",end='')
        else:
            print(k ,end='')
            k=k+1
    print()
-------------------------------------------------------------------------
