2numberssumisprimenumber:--
  def isprime(x):
    if(x==1):
        return 1
    if(x==2):
        return 1
    for i in range(2,(x//2)+1):
        if(x%i==0):
            return 0
    return 1
    
  
a=int(input())
for i in range(1,(a//2)+1):
    if(isprime(i) and isprime(a-i)):
        print("yes")
        break
else:
    print("no")
    --------------------------------------------------------------
     3combinationsets:--\
    '''def com(l):
    t=[]
    n=len(l)
    for i in range(n):
        for j in range(i+1,n):
            for k in range(j+1,n):
                t.append((l[i],l[j],l[k]))
    return t
l=[3,2,5,4,1,6,8]
x=com(l)
print(x)'''



    
    
''''def fun(l,k,current,res):
    if k==3:
        res.append(tuple(current))
        return
    for i in range(len(l)):
        fun(l,k + 1,current + [l[i]],res)
l = list(map(int,input().split(',')))
res = []
fun(l, 0, [], res)   
print(res)'''




def combi(l,k):
    def fun(curr,start):
        if len(curr)==k:
            print(curr)
            return
        for i in range(start,len(l)):
            fun(curr+[l[i]],i+1)
        return
    fun([],0)
a=[3,5,1,6]
k=3
combi(a,k)
-----------------------------------------------------------------------------    
    anagram:--
          # n=input()
# l=[('L',2),('R',3),('L',1)]
# s=""
# for i in range(3):
#     if l[i][0]=='L':
#         x1=l[i][1]
#         s=s+n[x1]
#     if l[i][0]=='R':
#         x1=l[i][1]
#         s=s+n[-x1]
# print(s)
# 

a=input()
n=int(input())
str=''
for i in range(n):
    b=input()
    if(b[0]=='L'):
        str=str+a[int(b[2])]
    else:
        str=str+a[-int(b[2])]
print(str)
str=list(str)
str.sort()
b=[]
for i in range(len(a)-n+1):
    t=list(a[i:n+i])
    t.sort()
    b.append(t)
print(b)
print(str)
for i in b:
    if(i==str):
        print("yes")
        break
else:
    print("no")
    
            
